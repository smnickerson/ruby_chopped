#!/usr/bin/env ruby

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'ruby_chopped'
require 'optparse'

@options = {}
parser = OptionParser.new do |o|
  # Option: Set Name
  o.on('-n', '--name [name]', 'name of project to create') do |n|
    @options[:name] = n
  end
  # Option: Force overwrite
  o.on('-f', '--force', 'force overwriting existing project') do
    @options[:force] = true
  end
  o.on('-l', '--limit [limit]', 'number of gems to add to the basket') do |l|
    @options[:limit] = l
  end
  # Option: Select only from locally installed gems
  o.on('-i', '--installed', 'only select gems that are locally installed') do
    @options[:installed_gems] = true
  end
  # Option: Select from all gems
  o.on('-a', '--all', 'select from all existing gems') do
    @options[:all_gems] = true
  end
  # Option: ignore gems in specified file
  o.on('-g', '--ignore [ignore_file]', 'ignore gems in specified file') do |f|
    @options[:ignore_file] = f
  end
end
parser.parse!

# Allow for old syntax of ruby_chopped new name
# At some point we'll do away with this entirely
unless @options[:name]
  if ARGV.shift == "new" && ARGV.first
    @options[:name] = ARGV.first
  end
end

unless @options[:name]
  puts parser
  exit 1
end

RubyChopped.create(@options)
